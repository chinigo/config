[include]
  path = ~/.gitconfig.local

[alias] ; Note: recursive aliases need to go through a !sh
  st         = status
  co         = checkout
  br         = branch

  ; Comparing
  di         = diff
  ds         = diff --staged
  dc         = diff --cached
  files      = show --stat
  unmerged   = "!f() { git log ${@:1} ^${@:2} --no-merges; }; f"
  unpushed   = !git unmerged `git branchname` `git upstream`

  ; Staging
  unstage    = reset HEAD
  rollback   = reset HEAD~
  ap         = add -p
  aa         = add -A
  an         = add -AN
  rp         = reset -p

  ; Checking out
  cop        = checkout -p
  cob        = checkout -b
  com        = checkout master

  ; Committing
  ci         = commit
  civ        = commit --verbose
  reword     = commit --amend --reset-author
  amend      = commit --amend -CHEAD --reset-author
  wip        = !sh -c 'git commit --message \"WIP - $1\"' -
  fixup      = commit --fixup --reset-author
  squash     = commit --squash --reset-author
  integrate  = !git pull --rebase origin $(git rev-parse --abbrev-ref HEAD) && git pull --rebase origin master

  ; Branching
  pr         = pull --rebase
  prm        = pull --rebase master
  prom       = pull --rebase origin master
  mb         = merge --no-ff
  bl         = branch --list
  ba         = branch --all
  br         = branch --remote
  branchname = rev-parse --abbrev-ref HEAD
  upstream   = rev-parse --abbrev-ref master@{upstream}
  prunelocal = ! git fetch -v origin && git branch -l | cut -d' ' -f3 | grep -v master | xargs git branch -d
  pruneall   = ! git prunelocal && git remote prune origin

  ; Rebasing
  rem        = rebase origin/master
  remi       = rebase origin/master --interactive
  rec        = rebase --continue
  rea        = rebase --abort
  res        = rebase --skip

  ; Cherry-picking
  cp         = cherry-pick
  cpc        = cherry-pick --continue
  cpa        = cherry-pick --abort

  ; Stashing
  sta        = stash
  stl        = stash list
  sts        = stash show
  stsp       = stash show --patch
  stss       = stash show --stat
  std        = stash drop
  stc        = stash clear

  ; Commit history
  show       = show --pretty medium
  l          = !git lg
  lga        = !git lg --all
  blog       = !git lg `git upstream`... --left-right
  flog       = !git llg
  llog       = !git llg
  llga       = !git llg --all
  lg         = log --graph --date=relative --pretty=format:'%Cred%h%Creset %C(blue)[%cd] %C(white)%s%Creset%Creset%C(green)%d%Creset'
  llg        = log --graph --stat --stat-width=80 --stat-count=16 --pretty=format:'--------------------------------------------------------------------------------%n %C(blue)[%cd]%Creset %C(black)%cn%Creset %C(red)%>|(80)%H%Creset%n %C(green)%>|(80)%d%Creset%n %s %b%n'

[branch]
  autosetupmerge      = true
[color]
  branch              = auto
  diff                = auto
  interactive         = auto
  status              = auto
  ui                  = auto
[core]
  editor              = vim
  precomposeunicode   = false
  excludesfile        = ~/workspace/config/gitignore
[diff]
  context             = 2
  tool                = vimdiff
  compactionHeuristic = true
[difftool]
  prompt              = false
[format]
  pretty              = %Cred%h%Creset %C(black bold)|%Creset %<(56,trunc)%s %C(blue)[%cd]%C(green)%d%Creset
[log]
  date                = short
[mergetool]
  keepBackup          = false
[pager]
  branch              = false
[push]
  default = current
[rebase]
  autosquash          = true
[rerere]
  enabled             = false
[filter "lfs"]
  process             = git-lfs filter-process
  required            = true
  clean               = git-lfs clean -- %f
  smudge              = git-lfs smudge -- %f
[lfs]
  url                 = "http://git-lfs.chinigo.net"
[user]
  name                = Michael Chinigo
  email               = mchinigo@seatgeek.com

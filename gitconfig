; Questions
[user]
  name  = Michael Chinigo
  email = chinigo@gmail.com

[alias] ; Note: recursive aliases need to go through a !sh
  st         = status
  co         = checkout
  br         = branch
  sta        = stash

  ; Comparing
  di         = diff
  ds         = diff --staged
  dc         = diff --cached
  files      = show --stat
  unmerged   = "!f() { git log ${@:1} ^${@:2} --no-merges; }; f"
  unpushed   = !git unmerged `git branchname` `git upstream`

  ; Staging
  unstage    = reset HEAD
  ap         = add -p
  aa         = add -A
  an         = add -AN
  rp         = reset -p
  cop        = checkout -p

  ; Committing
  ci         = commit
  amend      = commit --amend -CHEAD --reset-author
  wip        = !sh -c 'git commit --message \"WIP - $1\"' -
  fixup      = commit --fixup
  squash     = commit --squash
  integrate  = "!test \"$(git merge-base HEAD \"$1\")\" = \"$(git rev-parse HEAD)\" && test \"$(git ls-remote origin $(git rev-parse --abbrev-ref HEAD) | awk '{ print $1 }')\" = \"$(git rev-parse HEAD)\" && git merge --no-ff --edit $1 || echo >&2 \"Not up-to-date; refusing to merge, rebase first! Also make sure the branch you are integrating into is up to date!\""

  ; Branching
  pr         = pull --rebase
  mb         = merge --no-ff
  branchname = rev-parse --abbrev-ref HEAD
  upstream   = rev-parse --abbrev-ref master@{upstream}

  ; Rebasing
  rem         = rebase origin/master
  rec         = rebase --continue
  rea         = rebase --abort

  ; Commit history
  show       = show --pretty medium
  l          = !git lg
  lga        = !git lg --all
  blog       = !git lg `git upstream`... --left-right
  flog       = !git llg
  llog       = !git llg
  llga       = !git llg --all
  lg         = log --graph --date=relative --pretty=format:'\
%Cred%h%Creset \
%C(blue)[%cd] \
%C(white)%s%Creset\
%Creset%C(green)%d%Creset'
  llg        = log --graph --stat --stat-width=80 --stat-count=16 --pretty=format:'\
--------------------------------------------------------------------------------%n \
%C(blue)[%cd]%Creset \
%C(black)%cn%Creset\
%C(red)%>|(80)%H%Creset%n\
%C(green)%>|(80)%d%Creset%n\
 %s%n\
 %n%b%n'


[apply]
  whitespace          =  nowarn
[branch]
  autosetupmerge      =  true
[color]
  branch              =  auto
  diff                =  auto
  interactive         =  auto
  status              =  auto
  ui                  =  auto
[core]
  editor              =  vim
  pager               =  /usr/local/opt/git/share/git-core/contrib/diff-highlight/diff-highlight | less
  precomposeunicode   =  false
[diff]
  context             =  2
  tool                =  vimdiff
  compactionHeuristic =  true
[difftool]
  prompt              =  false
[format]
  pretty              =  %Cred%h%Creset %C(black bold)|%Creset %<(56,trunc)%s %C(blue)[%cd]%C(green)%d%Creset
[interactive]
  diffFilter          = /usr/local/opt/git/share/git-core/contrib/diff-highlight/diff-highlight
[log]
  date                =  short
[mergetool]
  keepBackup          =  false
[push]
	default = current
[rebase]
  autosquash          =  true
[rerere]
  enabled             =  false

[difftool "sourcetree"]
  cmd           =  opendiff \"$LOCAL\" \"$REMOTE\"
  path          =
[mergetool "sourcetree"]
  cmd           =  /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode =  true

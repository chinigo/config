[include]

[alias] ; Note: recursive aliases need to go through a !sh
  st         = status
  co         = checkout
  br         = branch

  ; Comparing
  di         = diff
  ds         = diff --staged
  dc         = diff --cached
  files      = show --stat
  unmerged   = "!f() { git log ${@:1} ^${@:2} --no-merges; }; f"
  unpushed   = !git unmerged `git branchname` `git upstream`

  ; Staging
  unstage    = reset HEAD
  rollback   = reset HEAD~
  ap         = add -p
  aa         = add -A
  an         = add -AN
  rp         = reset -p

  ; Checking out
  cop        = checkout -p
  cob        = checkout -b
  com        = !git checkout $(git main)

  ; Committing
  ci         = commit
  civ        = commit --verbose
  reword     = commit --amend --reset-author
  amend      = commit --amend -CHEAD --reset-author
  wip        = !sh -c 'git commit --message \"WIP - $1\"' -
  fixup      = commit --fixup --reset-author
  squash     = commit --squash --reset-author
  integrate  = !git pull origin $(git rev-parse --abbrev-ref HEAD) && git pull origin $(git main)

  ; Branching
  main       = !"f() { if [[ -n \"$(git branch --remote --list origin/main)\"  ]]; then echo main; else echo master; fi; }; f"
  pr         = pull --rebase
  prm        = !git pull --rebase $(git main)
  prom       = !git pull --rebase origin $(git main)
  mb         = merge --no-ff
  bl         = branch --list
  ba         = branch --all
  br         = branch --remote
  bd         = branch --delete
  bD         = branch --delete --force
  branchname = rev-parse --abbrev-ref HEAD
  reup       = ! git reset --hard $(git upstream)
  track      = ! git branch --set-upstream-to=origin/$(git symbolic-ref --short HEAD)
  tracking   = ! git rev-parse --abbrev-ref HEAD@{upstream}
  upstream   = ! git rev-parse --abbrev-ref $(git main)@{upstream}
  prunelocal = ! git fetch -v origin && git branch -l | cut -d' ' -f3 | grep -v master | grep -v main | xargs git branch -d
  pruneall   = ! git prunelocal && git remote prune origin

  ; Rebasing
  rem        = ! git rebase origin/$(git main)
  rei        = rebase --interactive
  remi       = ! git rebase origin/$(git main) --interactive
  rec        = rebase --continue
  rea        = rebase --abort
  res        = rebase --skip

  ; Cherry-picking
  cp         = cherry-pick
  cpc        = cherry-pick --continue
  cpa        = cherry-pick --abort

  ; Stashing
  sta        = stash
  stl        = stash list
  sts        = stash show
  stsp       = stash show --patch
  stss       = stash show --stat
  std        = stash drop
  stc        = stash clear

  ; Commit history
  sh         = show --pretty=fuller
  l          = !git lg
  lga        = !git lg --all
  blog       = !git lg `git upstream`... --left-right
  flog       = !git llg
  llog       = !git llg
  llga       = !git llg --all
  lg         = log --graph --date=relative --pretty=format:'%Cred%h%Creset %C(blue)[%cd] %C(white)%s%Creset%Creset%C(green)%d%Creset'
  llg        = log --graph --stat --stat-width=80 --stat-count=16 --pretty=format:'--------------------------------------------------------------------------------%n %C(blue)[%cd]%Creset %C(black)%cn%Creset %C(red)%>|(80)%H%Creset%n %C(green)%>|(80)%d%n%Creset%n %s %n%n%b%n'

[color]
  branch              = auto
  diff                = auto
  interactive         = auto
  status              = auto
  ui                  = auto
[core]
  editor              = vim
  precomposeunicode   = false
  excludesfile        = ~/.config/git/ignore
  pager               = "git-split-diffs --color | less"
[diff]
  context             = 2
  tool                = vimdiff
  compactionHeuristic = true
  colorMoved          = zebra
[difftool]
  prompt              = false
[fetch]
  prune               = true
[format]
  pretty              = %Cred%h%Creset %C(black bold)|%Creset %<(56,trunc)%s %C(blue)[%cd]%C(green)%d%Creset
[log]
  date                = short
[mergetool]
  keepBackup          = false
[pager]
  branch              = less
  log                 = less
  diff                = "git-split-diffs --color | less"
  show                = "git-split-diffs --color | less"
[pull]
  rebase              = true
[push]
  default = current
[rebase]
  autosquash          = true
[rerere]
  enabled             = false
[user]
  name = Michael Chinigo
  email = chinigo@storyboard.fm


# git-lfs stuff
[filter "lfs"]
  process             = git-lfs filter-process
  required            = true
  clean               = git-lfs clean -- %f
  smudge              = git-lfs smudge -- %f
[lfs]
  url                 = "http://git-lfs.chinigo.net"

# https://github.com/banga/git-split-diffs
[split-diffs]
  theme-name          = github-dark-dim
[init]
	defaultBranch = main
